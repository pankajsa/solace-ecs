AWSTemplateFormatVersion: 2010-09-09
Description: >

  This template deploys a VPC, with a pair of public and private subnets spread 
  across two Availabilty Zones. It deploys an Internet Gateway, with a default 
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
  and default routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with 
  ECS hosts distributed across multiple Availability Zones. 

  Finally, it deploys a pair of example ECS services from containers published in 
  Amazon EC2 Container Registry (Amazon ECR).

  Last Modified: 26th August 2019
  Author: Pankaj Arora <pankaj.arora@solace.com>

Resources:
  # VPC:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://s3-ap-southeast-1.amazonaws.com/pankaj.setup.solace.com/vpc.yaml
  #     Parameters:
  #       EnvironmentName: !Join
  #                         - '-'
  #                         - - 'ECSOnePlatform'
  #                           - !Ref AWS::StackName
  #       VpcCIDR: 10.0.0.0/16
  #       PublicSubnet1CIDR: 10.0.1.0/24
  #       PublicSubnet2CIDR: 10.0.2.0/24
  #       PrivateSubnet1CIDR: 10.0.10.0/24
  #       PrivateSubnet2CIDR: 10.0.20.0/24

  # SecurityGroups:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://s3-ap-southeast-1.amazonaws.com/pankaj.setup.solace.com/security-groups.yaml
  #     Parameters:
  #       EnvironmentName: !Join
  #                         - '-'
  #                         - - 'ECSOnePlatform'
  #                           - !Ref AWS::StackName
  #       VPC: !GetAtt VPC.Outputs.VPC

  # ALB:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://s3-ap-southeast-1.amazonaws.com/pankaj.setup.solace.com/elb.yaml
  #     Parameters:
  #       # EnvironmentName: !Join
  #       #                   - '-'
  #       #                   - - 'ECSOnePlatform'
  #       #                     - !Ref AWS::StackName
  #       # VPC: !GetAtt VPC.Outputs.VPC
  #       # Subnets: !GetAtt VPC.Outputs.PublicSubnets
  #       EnvironmentName: ECSOnePlatform-dev1
  #       VPC: vpc-07ac788d2f718599f
  #       Subnets: subnet-0e6467d0daeffcda2


  # ECS:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://s3-ap-southeast-1.amazonaws.com/pankaj.setup.solace.com/ecs-cluster.yaml
  #     Parameters:
  #       EnvironmentName: !Join
  #                         - '-'
  #                         - - 'ECSOnePlatform'
  #                           - !Ref AWS::StackName
  #       VPC: vpc-07ac788d2f718599f
  #       Subnet: subnet-0e6467d0daeffcda2
  #       InstanceType: t2.medium
  #       KeyName: parora_ap_se
  #       IamInstanceProfile: Pankaj-EC2-FullAccess
  #       ExternalDiskId: vol-09dd6dd707bd2e6b8
  #       TargetGroupARN: "arn:aws:elasticloadbalancing:ap-southeast-1:888210802580:targetgroup/ECSOnePlatform-dev1-55555/c8b851fb0fd649e0"


  ECSTask:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/pankaj.setup.solace.com/ecs-task.yaml
      Parameters:
        Image: 888210802580.dkr.ecr.ap-southeast-1.amazonaws.com/oneplatform:solace

  ECSService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-ap-southeast-1.amazonaws.com/pankaj.setup.solace.com/ecs-service.yaml
      Parameters:
        cluster: ECSOnePlatform-dev4
        taskdefinition: !GetAtt ECSTask.Outputs.Task


        #   LifecycleHook:
#     Type: AWS::CloudFormation::Stack
#     Properties:
#       TemplateURL: https://s3.amazonaws.com/ecs-refarch-cloudformation/infrastructure/lifecyclehook.yaml
#       Parameters:
#         Cluster: !GetAtt ECS.Outputs.Cluster
#         ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

# Outputs:
#   ProductServiceUrl:
#     Description: The URL endpoint for the product service
#     Value: !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]

